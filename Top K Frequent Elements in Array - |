class Solution {
    public int[] topK(int[] nums, int k) {
        // Code here
        
      int ans[] = new int[k];
	Map<Integer, Integer> mp
            = new HashMap<Integer, Integer>();

      
        for (int i = 0; i < nums.length; i++) {

            mp.put(nums[i], 
                   mp.getOrDefault(nums[i], 0) + 1);
        }
		
        PriorityQueue<Map.Entry<Integer, 
                                Integer>> queue
            = new PriorityQueue<>(
                (a, b)
                -> a.getValue().equals(b.getValue())
                   ? Integer.compare(b.getKey(),
                                     a.getKey())
                   : Integer.compare(b.getValue(),
                                     a.getValue()));

        for (Map.Entry<Integer, Integer> entry :
             mp.entrySet())
            queue.offer(entry);

        for (int i = 0; i < k; i++) 
        {
           ans[i]=queue.poll().getKey();
        }
		
		return ans;
        
    }
}
