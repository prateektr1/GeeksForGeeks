public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
       Deque<Integer> longStack = new ArrayDeque<>();
       ListNode a = l1;
       while(a != null) {
           longStack.offerFirst(a.val);
           a = a.next;
       }
       Deque<Integer> shortStack = new ArrayDeque<>();
       ListNode b = l2;
       while(b != null) {
           shortStack.offerFirst(b.val);
           b = b.next;
       }
       Deque<Integer> resStack = new ArrayDeque<>();
       int res = 0;
       while(!longStack.isEmpty() || !shortStack.isEmpty() || res != 0) {
           if(!longStack.isEmpty()) {
               res += longStack.pollFirst();
           }
           if(!shortStack.isEmpty()) {
               res += shortStack.pollFirst();
           }
           resStack.offerFirst(res % 10);
           res /= 10;
       }
       ListNode dummy = new ListNode();
       ListNode d = dummy;
       while(!resStack.isEmpty()) {
           d.next = new ListNode(resStack.pollFirst());
           d = d.next;
       }
       return dummy.next;
   }
